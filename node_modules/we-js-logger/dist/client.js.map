{"version":3,"file":null,"sources":["../src/util/common/config.js","../src/util/client/consoleLogger.js","../src/util/client/logentriesLogger.js","../src/util/common/rollbar.js","../src/util/client/rollbarLogger.js","../src/client.js"],"sourcesContent":["import bunyan from 'bunyan';\nimport pick from 'lodash/pick';\n\n/**\n * Config keys that should always be passed to\n * `bunyan.createLogger`\n * @type {Array}\n */\nconst BUNYAN_CONFIG_FIELDS = [\n  'name',\n  'level',\n  'streams',\n  'serializers',\n];\n\n/**\n * Whitelist of extra config keys that should be\n * passed to `bunyan.createLogger` to form\n * root logger fields.\n * @type {Array}\n */\nconst DEFAULT_ROOT_FIELDS = [\n  'environment',\n  'release',\n];\n\n/** @type {Object} default config to Logger classes */\nexport const DEFAULT_CONFIG = Object.freeze({\n  name: 'WeWork',\n  environment: null,\n  codeVersion: null,\n  level: 'info',\n  stdout: true,\n  streams: null,\n  serializers: bunyan.stdSerializers,\n  logentriesToken: null,\n  rollbarToken: null,\n  rootFields: DEFAULT_ROOT_FIELDS\n});\n\n/**\n * Merges config with DEFAULT_CONFIG, and appends passed in streams\n * with pre-configured streams for the runtime.\n *\n * This is used to configure this library, not bunyan as it has a lot of\n * extra information. See `toBunyanConfig` below.\n *\n * @param  {Object} config\n * @param  {Function} getStreamsForRuntime - returns appended config.streams\n * @returns {Object} runtimeConfig\n */\nexport function assembleConfig(config, getStreamsForRuntime) {\n  const baseConfig = Object.assign({}, DEFAULT_CONFIG, config);\n\n  // Add our custom streams and return a full `we-js-logger` config object\n  return Object.assign(baseConfig, {\n    streams: getStreamsForRuntime(baseConfig)\n  });\n}\n\n/**\n * Create a config objct for bunyan from a full `we-js-logger` config object.\n * Extra keys passed to `bunyan.createLogger` become root logger fields, pass\n * a custom `config.rootFields` to control this behavior\n *\n * @param  {Object} config\n * @param  {String[]} config.rootFields - extra fields to pass to bunyan\n * @return {Object} config for bunyan.createLogger\n */\nexport function toBunyanConfig(config) {\n  return pick(config, BUNYAN_CONFIG_FIELDS.concat(config.rootFields));\n}\n","import bunyan from 'bunyan';\n\n/**\n * Pretty logging to `console` for client applications\n */\nexport default function ClientConsoleLogger() {}\n\n/**\n * Transport to `console`\n * @param  {Object} data\n * @returns {undefined}\n */\nClientConsoleLogger.prototype.write = function (data = {}) {\n  const loggerName = data.component ? `${data.name}/${data.component}` : data.name;\n\n  let levelCss;\n  const defaultCss = 'color: DimGray';\n  const msgCss = 'color: SteelBlue';\n\n  if (data.level < bunyan.DEBUG) {\n    levelCss = 'color: DeepPink';\n  } else if (data.level < bunyan.INFO) {\n    levelCss = 'color: GoldenRod';\n  } else if (data.level < bunyan.WARN) {\n    levelCss = 'color: DarkTurquoise';\n  } else if (data.level < bunyan.ERROR) {\n    levelCss = 'color: Purple';\n  } else if (data.level < bunyan.FATAL) {\n    levelCss = 'color: Crimson';\n  } else {\n    levelCss = 'color: Black';\n  }\n\n  console.log( // eslint-disable-line no-console\n    '[%s] %c%s%c: %s: %c%s',\n    data.time,\n    levelCss, bunyan.nameFromLevel[data.level],\n    defaultCss, loggerName,\n    msgCss, data.msg\n  );\n\n  if (data.err && data.err.stack) {\n    console.error(data.err.stack); // eslint-disable-line no-console\n  }\n};\n","import isFunction from 'lodash/isFunction';\nimport bunyan from 'bunyan';\nimport LE from 'le_js';\n\n/**\n* Custom bunyan stream that transports to Logentries from client applications\n* @param {String} options.token\n* @param {String} options.level\n*/\nexport default function ClientLogentriesLogger({ token }) {\n  LE.init({\n    token,\n    no_format: true,\n    page_info: 'per-page'\n  });\n}\n\n/**\n* Transport logs to Logentries\n* @param  {Object} data\n* @returns {undefined}\n*/\nClientLogentriesLogger.prototype.write = function (data = {}) {\n  const level = bunyan.nameFromLevel[data.level];\n  if (isFunction(LE[level])) {\n    LE[level](data);\n  } else {\n    LE.log(data);\n  }\n};\n","import bunyan from 'bunyan';\n\n/**\n * Map of bunyan log levels to Rollbar levels\n * https://github.com/trentm/node-bunyan#levels\n * https://rollbar.com/docs/notifier/rollbar.js/api/#rollbardebuginfowarnwarningerrorcritical\n * @type {Object}\n */\nconst bunyanToRollbarLevelMap = {\n  fatal: 'critical',\n  error: 'error',\n  warn: 'warning',\n  info: 'info',\n  debug: 'debug',\n  trace: 'debug'\n};\n\n/**\n * Convert bunyan log level to rollbar level. Defaults to 'error'.\n * @param   {String} level - bunyan log level\n * @returns {String} Rollbar log level\n */\nexport const bunyanLevelToRollbarLevelName = (level = bunyan.ERROR) => {\n  const bunyanLevelName = bunyan.nameFromLevel[level];\n  return bunyanToRollbarLevelMap[bunyanLevelName] || 'error';\n};\n","import omit from 'lodash/omit';\nimport get from 'lodash/get';\nimport { bunyanLevelToRollbarLevelName } from '../common/rollbar';\n\n// Rollbar script exposes this global immediately, whether or not its already initialized\nexport const isGlobalRollbarConfigured = () => !!get(global, 'Rollbar');\n\n/**\n * Custom rollbar stream that transports to logentries from a browser\n * Wortks with a global Rollbar instance that is already initialized.\n * Note this expects rollbar to be loaded in the head, not via an npm module.\n * See https://rollbar.com/docs/notifier/rollbar.js/#quick-start for details on\n * integrating Rollbar in client apps\n *\n * @param {String} options.token\n * @param {String} options.environment\n * @param {String} options.codeVersion\n */\nexport default function ClientRollbarLogger({ token, environment, codeVersion }) {\n  // Rollbar may already be initialized, but thats ok\n  // https://rollbar.com/docs/notifier/rollbar.js/configuration/\n  global.Rollbar.configure({\n    accessToken: token,\n    environment,\n    captureUncaught: true,\n    captureUnhandledRejections: true,\n    payload: {\n      environment,\n      javascript: {\n        code_version: codeVersion,\n        source_map_enabled: true\n      }\n    }\n  });\n}\n\n/**\n * Transport logs to Rollbar\n * @param  {Object} data\n * @returns {undefined}\n */\nClientRollbarLogger.prototype.write = function (data = {}) {\n  const rollbarLevelName = bunyanLevelToRollbarLevelName(data.level);\n  const scopeData = omit(data, ['req', 'level']);\n\n  // https://rollbar.com/docs/notifier/rollbar.js/#usage\n  global.Rollbar.scope(scopeData)[rollbarLevelName](data.msg, data.err);\n};\n","import bunyan from 'bunyan';\nimport { assembleConfig, toBunyanConfig } from './util/common/config';\n\nimport ClientConsoleLogger from './util/client/consoleLogger';\nimport ClientLogentriesLogger from './util/client/logentriesLogger';\nimport ClientRollbarLogger, { isGlobalRollbarConfigured } from './util/client/rollbarLogger';\n\n/**\n * A logger than can be used in browsers\n * @param   {Object} config\n * @returns {Object} - a preconfigured `bunyan` logger instance\n */\nexport default function ClientLogger(config = {}) {\n  const clientConfig = assembleConfig(config, getStreams);\n  return bunyan.createLogger(toBunyanConfig(clientConfig));\n}\n\n/**\n * Add standard Client logger streams to `config.streams`\n * @private\n * @param  {Object} config\n * @param  {Array?} config.streams\n * @returns {Array}\n */\nfunction getStreams(config) {\n  // Any passed in streams\n  const streams = Array.isArray(config.streams)\n    ? [...config.streams]\n    : [];\n\n  // Nice console output\n  if (config.stdout) {\n    streams.push({\n      name: 'stdout',\n      level: config.level,\n      stream: new ClientConsoleLogger(),\n      type: 'raw'\n    });\n  }\n\n  // Rollbar Transport\n  // Messages at the warn level or higher are transported to Rollbar\n  // Detects presence of global Rollbar and passed in token\n  if (isGlobalRollbarConfigured()) {\n    if (config.rollbarToken) {\n      streams.push({\n        name: 'rollbar',\n        level: 'warn',\n        stream: new ClientRollbarLogger({\n          token: config.rollbarToken,\n          environment: config.environment,\n          codeVersion: config.codeVersion\n        }),\n        type: 'raw'\n      });\n    }\n  } else {\n    /* eslint-disable no-console */\n    console.warn('Client rollbar is not correctly configured');\n    /* eslint-enable */\n  }\n\n  // Transport client logs\n  if (config.logentriesToken) {\n    streams.push({\n      name: 'logentries',\n      level: config.level,\n      stream: new ClientLogentriesLogger({ token: config.logentriesToken }),\n      type: 'raw'\n    });\n  }\n\n  return streams;\n}\n"],"names":["BUNYAN_CONFIG_FIELDS","DEFAULT_ROOT_FIELDS","DEFAULT_CONFIG","Object","freeze","bunyan","stdSerializers","assembleConfig","config","getStreamsForRuntime","baseConfig","assign","toBunyanConfig","pick","concat","rootFields","ClientConsoleLogger","prototype","write","data","loggerName","component","name","levelCss","defaultCss","msgCss","level","DEBUG","INFO","WARN","ERROR","FATAL","log","time","nameFromLevel","msg","err","stack","error","ClientLogentriesLogger","token","init","isFunction","LE","bunyanToRollbarLevelMap","bunyanLevelToRollbarLevelName","bunyanLevelName","isGlobalRollbarConfigured","get","global","ClientRollbarLogger","environment","codeVersion","Rollbar","configure","rollbarLevelName","scopeData","omit","scope","ClientLogger","clientConfig","getStreams","createLogger","streams","Array","isArray","stdout","push","rollbarToken","warn","logentriesToken"],"mappings":"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"}